<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spUtil) {
  var c = this;
	
	c.cancelFlight = function(f) {
		c.data.currentFlight = f;
		c.data.action = "cancelFlight";
		c.server.update().then(function() {
			c.data.action = "";
			window.location.reload();
			alert("Flight Canceled!");
		})
	}
	
		spUtil.recordWatch($scope, "x_348652_flight_bo_m2m_flights_users", "", function(name,data) {
		spUtil.update($scope);
	})
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>my_booked_flights</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>My Booked Flights</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	
	if (input) {
		if (input.action == "cancelFlight") {

			//Remove the corresponding record on the Flights-User M2M table, based on the current flight and user.
			var cr = new GlideRecord('x_348652_flight_bo_m2m_flights_users');
			cr.addQuery('user', '=', gs.getUserID());
			cr.query();

			while (cr.next()) {
				if (cr.getValue('flight') == input.currentFlight.sysFlightID) {
					//Decrement the total passengers on this flight by 1
					var fr = new GlideRecord('x_348652_flight_bo_flight');
					console.log(input.currentFlight.sysFlightID);
					fr.addQuery('sys_id', input.currentFlight.sysFlightID);
					fr.query();
					fr.next();
					fr.setValue('passengers', (parseInt(fr.getValue('passengers')) - 1));
					fr.update();
					
					cr.deleteRecord();
					break;
				}
			}

			console.log("Flight Canceled.");
		}
	}
	
	data.flights = [];
	var gr = new GlideRecord('x_348652_flight_bo_flight');
	gr.query();
	while(gr.next()) {
		var ur = new GlideRecord('x_348652_flight_bo_m2m_flights_users');
		ur.addQuery('user','=',gs.getUserID());
		ur.query();
		var proceed = true;
		while(ur.next()){
			if (ur.getValue('flight') != gr.getUniqueValue()) {
				proceed = false;
			}
			else {
				proceed = true;
				break;
			}
		}
		if (proceed) {
			var flight = {};
			flight.flightID = gr.getDisplayValue('number');
			flight.sysFlightID = gr.getUniqueValue();
			flight.startAirport = gr.getDisplayValue('starting_airport');
			flight.sysStartAirport = gr.getValue('starting_airport');
			flight.destination = gr.getDisplayValue('destination');
			flight.sysDestination = gr.getValue('destination');
			flight.departureDate = gr.getDisplayValue('departure_date');
			flight.arrivalDate = gr.getDisplayValue('arrival_date');
			flight.duration = gr.getDisplayValue('duration');
			data.flights.push(flight);
		}
	}
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-06-05 13:23:13</sys_created_on>
        <sys_id>62cbf4eedb797300e7a111203996198f</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>My Booked Flights</sys_name>
        <sys_package display_value="Flight Booking App" source="x_348652_flight_bo">f4efe721db213300e7a111203996190a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Flight Booking App">f4efe721db213300e7a111203996190a</sys_scope>
        <sys_update_name>sp_widget_62cbf4eedb797300e7a111203996198f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-06-05 13:56:45</sys_updated_on>
        <template><![CDATA[<div>
  <div class="panel" "panel-default">
    <div class="panel-heading">
      <h2><b><u>My Booked Flights</u></b></h2>
    </div>
    <div class="list-group">
      <a class="list-group-item" ng-repeat="flight in c.data.flights ">
        <div class="m-l-lg">
          <b class="text-primary">Flight #: {{flight.flightID}}</b><br>
          Starting Airport: {{flight.startAirport}} -> Destination: {{flight.destination}} 
          <br>Departure Date: {{flight.departureDate}} | Arrival Date: {{flight.arrivalDate}}
          <input ng-click="c.cancelFlight(flight)" class="btn btn-primary pull-right" id="dateSubmitButton" type="submit" value="Cancel Flight"> 
          <br>Duration: {{flight.duration}}
        </div>
      </a>
    </div>
    <div ng-if="data.flights.length == 0"  class="b-t wrapper text-center">No Flights</div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
